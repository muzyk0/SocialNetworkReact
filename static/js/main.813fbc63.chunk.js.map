{"version":3,"sources":["Components/Sidebar/Sidebar.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/Posts/Posts.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileLogo/ProfileLogo.module.css","Components/Profile/ProfileData/ProfileData.module.css","Components/Profile/Posts/Post/Post.module.css","reportWebVitals.ts","redux/state.ts","Components/Header/logo.svg","Components/Header/Header.tsx","Components/Sidebar/Sidebar.tsx","Components/Profile/ProfileLogo/ProfileLogo.tsx","Components/Profile/ProfileData/ProfileData.tsx","Components/Profile/Posts/Post/Post.tsx","Components/Profile/Posts/Posts.tsx","Components/Profile/Profile.tsx","Components/Dialogs/DialogItem/DialogsItem.tsx","Components/Dialogs/Messages/Message.tsx","Components/Dialogs/Dialogs.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","console","log","state","profilePage","newPostText","posts","id","message","likesCount","dialogsPage","newMessageText","dialogs","name","messages","sidebar","friends","addPost","newPost","Date","getTime","push","updateNewPostText","newText","addMessage","newMessage","updateNewDialogMessage","Header","className","s","header","src","logo","alt","SidebarFriendsBlock","props","friendItem","map","friend","friendBlock","Friend","imgProfilePhoto","Sidebar","to","activeClassName","active","ProfileLogo","profile_logo","ProfileData","profileData","Post","item","Posts","postsElements","post","postsBlock","new_post","value","onChange","e","currentTarget","onClick","Profile","profile","DialogItem","path","dialog","Message","Dialogs","dialogsElements","dialogPage","messagesElements","dialogsItems","App","basename","process","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813fbc63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1cDx8\",\"active\":\"Sidebar_active__3i9ML\",\"friendBlock\":\"Sidebar_friendBlock__2RQZK\",\"friend\":\"Sidebar_friend__1gMdW\",\"name\":\"Sidebar_name__3r0Lg\",\"imgProfilePhoto\":\"Sidebar_imgProfilePhoto__2UkcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2RTRi\",\"dialogsItems\":\"Dialogs_dialogsItems__rExNX\",\"dialog\":\"Dialogs_dialog__1kit8\",\"active\":\"Dialogs_active__3DRs9\",\"messanges\":\"Dialogs_messanges__-K1ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Posts_postsBlock__oS6bv\",\"posts\":\"Posts_posts__3lMq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1nZGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dxvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_logo\":\"ProfileLogo_profile_logo__239sd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3Vq3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2-IYg\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let rerenderEntireTree = () => {\r\n    console.log('State changed')\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePostType = {\r\n    newPostText: string\r\n    posts: Array<PostType>\r\n}\r\nexport type DialogsPageType = {\r\n    newMessageText: string\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\nexport type FriendsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type SidebarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nexport type SidebarFriendsType = {\r\n    sidebar: SidebarType\r\n}\r\nexport type RootStateType = {\r\n    profilePage: ProfilePostType\r\n    dialogsPage: DialogsPageType\r\n    sidebar: SidebarType\r\n}\r\n\r\nlet state: RootStateType = {\r\n    profilePage: {\r\n        newPostText: '',\r\n        posts: [\r\n            {\r\n                id: 1,\r\n                message: 'Good this site',\r\n                likesCount: 10\r\n            },\r\n            {\r\n                id: 1,\r\n                message: 'Good this site',\r\n                likesCount: 10\r\n            }\r\n        ],\r\n    },\r\n    dialogsPage: {\r\n        newMessageText: '',\r\n        dialogs: [\r\n            {id: 1, name: 'Dimych',},\r\n            {id: 2, name: 'Nasty',},\r\n            {id: 3, name: 'Vova',},\r\n            {id: 4, name: 'Viktor',},\r\n            {id: 5, name: 'Olya',},\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hi'},\r\n            {id: 2, message: 'How are you?'},\r\n            {id: 3, message: 'Dimych'},\r\n        ]\r\n    },\r\n    sidebar: {\r\n        friends: [\r\n            {id: 1, name: 'Dimych',},\r\n            {id: 2, name: 'Nasty',},\r\n            {id: 3, name: 'Vova',},\r\n        ]\r\n    }\r\n}\r\n\r\nexport const addPost = () => {\r\n    const newPost: PostType = {\r\n        id: new Date().getTime(),\r\n        message: state.profilePage.newPostText,\r\n        likesCount: 0\r\n    }\r\n    state.profilePage.posts.push(newPost)\r\n    state.profilePage.newPostText = '';\r\n    rerenderEntireTree()\r\n}\r\nexport const updateNewPostText = (newText: string) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree();\r\n}\r\nexport const addMessage = () => {\r\n    const newMessage: MessageType = {\r\n        id: new Date().getTime(),\r\n        message: state.dialogsPage.newMessageText,\r\n    }\r\n    state.dialogsPage.messages.push(newMessage)\r\n    state.dialogsPage.newMessageText = ''\r\n    rerenderEntireTree();\r\n}\r\nexport const updateNewDialogMessage = (newText: string) => {\r\n    state.dialogsPage.newMessageText = newText;\r\n    rerenderEntireTree();\r\n}\r\n\r\nexport const subscribe = (observer: () => void) => {\r\n    rerenderEntireTree = observer\r\n}\r\n\r\nexport default state","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport s from './Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={s.header}>\n        <img src={logo} alt=\"\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Sidebar.module.css';\nimport {FriendsType, SidebarFriendsType, SidebarType} from '../../redux/state';\n\nconst Sidebar: React.FC<SidebarFriendsType> = (props) => {\n    return (\n        <aside className={s.sidebar}>\n            <nav >\n                <ul>\n                    <li><NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink></li>\n                    <li><NavLink to={'/dialogs'} activeClassName={s.active}>Messages</NavLink></li>\n                    <li><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></li>\n                    <li><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></li>\n                    <li><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></li>\n                </ul>\n            </nav>\n            <SidebarFriendsBlock friends={props.sidebar.friends}/>\n        </aside>\n    )\n}\n\nconst SidebarFriendsBlock: React.FC<SidebarType> = (props) => {\n\n    const friendItem = props.friends.map(friend => <Friend id={friend.id} name={friend.name}/>)\n\n    return (\n        <div>\n            <h3>Friends</h3>\n            <div className={s.friendBlock}>\n                {friendItem}\n            </div>\n        </div>\n    )\n}\n\nconst Friend: React.FC<FriendsType> = (props) => {\n    return (\n        <div className={s.friend}>\n            <div className={s.imgProfilePhoto}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport s from './ProfileLogo.module.css';\n\nfunction ProfileLogo() {\n    return (\n        <div className={s.profile_logo}/>\n)\n}\n\nexport default ProfileLogo;\n","import React from \"react\";\r\nimport s from \"./ProfileData.module.css\"\r\n\r\nconst ProfileData = () => {\r\n    return (\r\n        <div className={s.profileData}>\r\n            <img src=\"https://d13ezvd6yrslxm.cloudfront.net/wp/wp-content/images/avatar-2-story.jpg\" alt=\"profile avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React from \"react\";\r\n\r\nimport s from \"./Post.module.css\"\r\nimport {PostType} from '../../../../redux/state';\r\n\r\n\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://d13ezvd6yrslxm.cloudfront.net/wp/wp-content/images/avatar-2-story.jpg\"\r\n                 alt=\"Logo with Profile\"/>\r\n            <p>{props.message}</p>\r\n            <p>Like {props.likesCount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport s from './Posts.module.css'\r\nimport Post from './Post/Post';\r\nimport {PostType} from '../../../redux/state';\r\n\r\nexport type ProfilePostType = {\r\n    posts: Array<PostType>\r\n    addPost: () => void\r\n    newPostText: string\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\n\r\nconst Posts = (props: ProfilePostType) => {\r\n\r\n    const postsElements = props.posts.map(post =>\r\n        <Post id={post.id}\r\n              message={post.message}\r\n              likesCount={post.likesCount}/>)\r\n\r\n    const addPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <div className={s.new_post}>\r\n                <div>\r\n                    <textarea value={props.newPostText} onChange={onPostChange}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileLogo from './ProfileLogo/ProfileLogo';\nimport ProfileData from './ProfileData/ProfileData';\nimport Posts from './Posts/Posts';\nimport {ProfilePostType} from '../../redux/state';\n\nexport type ProfilePageType = {\n    profilePage: ProfilePostType\n    addPost: () => void\n    updateNewPostText: (newText: string) => void\n}\n\nfunction Profile(props: ProfilePageType) {\n\n    return (\n        <div className={s.profile}>\n            <ProfileLogo />\n            <ProfileData />\n            <Posts posts={props.profilePage.posts}\n                   newPostText={props.profilePage.newPostText}\n                   addPost={props.addPost}\n                   updateNewPostText={props.updateNewPostText}\n            />\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\ntype dialogItemType = {\n    name: string\n    id: number\n}\n\nconst DialogItem = (props: dialogItemType) => {\n    const path = `/dialogs/${props.id}`\n    return (\n        <div className={`${s.dialog}`}>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>)\n}\n\nexport default DialogItem;\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nexport type MessageItemType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageItemType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogsItem';\nimport Message from './Messages/Message';\nimport {DialogsPageType} from '../../redux/state';\n\ntype PropsType = {\n    dialogPage: DialogsPageType\n    newMessageText: string\n    addMessage: () => void\n    updateNewDialogMessage: (newText: string) => void\n}\n\nfunction Dialogs(props: PropsType) {\n\n    const dialogsElements = props.dialogPage.dialogs.map(dialogs => <DialogItem key={dialogs.id} name={dialogs.name}\n                                                                                id={dialogs.id}/>)\n\n    const messagesElements = props.dialogPage.messages.map(message => <Message key={message.id}\n                                                                               message={message.message}/>)\n\n\n    const addMessage = () => {\n        props.addMessage()\n    }\n    const updateNewMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewDialogMessage(e.currentTarget.value)\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n                <div>\n                    <textarea value={props.newMessageText} onChange={updateNewMessage}/>\n                </div>\n                <div>\n\n                    <button onClick={addMessage}>Push message</button>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default Dialogs;\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Profile from './Components/Profile/Profile';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Dialogs from './Components/Dialogs/Dialogs';\nimport {RootStateType} from './redux/state';\n\nexport type AppStateType = {\n    state: RootStateType\n    addPost: () => void\n    addMessage: () => void\n    updateNewPostText: (newText: string) => void\n    updateNewDialogMessage: (newText: string) => void\n}\n\nconst App: React.FC<AppStateType> = (props) => {\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"app_wrapper\">\n                <Header/>\n                <Sidebar sidebar={props.state.sidebar}/>\n                <div className={'app_wrapper_content'}>\n                    <Route path='/profile' render={() => <Profile\n                        profilePage={props.state.profilePage}\n                        addPost={props.addPost}\n                        updateNewPostText={props.updateNewPostText}\n                    />}/>\n\n                    <Route path='/dialogs' render={() => <Dialogs\n                        dialogPage={props.state.dialogsPage}\n                        newMessageText={props.state.dialogsPage.newMessageText}\n                        addMessage={props.addMessage}\n                        updateNewDialogMessage={props.updateNewDialogMessage}\n                    />}/>\n\n\n                    {/*<Route path='/news' render={() => <News/>}/>*/}\n                    {/*<Route path='/music' render={() => <Music/>}/>*/}\n                    {/*<Route path='/settings' render={() => <Settings/>}/>*/}\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport state, {\n    addMessage,\n    addPost,\n    subscribe,\n    updateNewDialogMessage,\n    updateNewPostText\n} from './redux/state';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nexport const rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state}\n                 addPost={addPost}\n                 addMessage={addMessage}\n                 updateNewPostText={updateNewPostText}\n                 updateNewDialogMessage={updateNewDialogMessage}\n            />\n        </React.StrictMode>, document.getElementById('root')\n    )\n}\n\nrerenderEntireTree()\n\nsubscribe(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}