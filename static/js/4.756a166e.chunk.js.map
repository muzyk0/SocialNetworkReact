{"version":3,"sources":["Components/common/FormsControls/FormsControls.module.css","Components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","Components/Profile/Profile.module.css","Components/Profile/ProfileData/ProfileData.module.css","Components/Profile/Posts/MyPosts.module.css","Components/Profile/Posts/Post/Post.module.css","Components/common/EditableSpan/EditableSpan.tsx","Components/Profile/ProfileData/ProfileData.tsx","Components/Profile/Posts/Post/Post.tsx","Components/Profile/Posts/AddNewPostForm.tsx","Components/Profile/Posts/MyPosts.tsx","Components/Profile/Posts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["module","exports","FormControl","props","meta","children","hasError","touched","error","className","styles","formControl","Textarea","input","Input","required","value","maxLength","max","length","EditableSpan","React","memo","useState","editMode","setEditMode","title","setTitle","onDoubleClick","type","onBlur","onChange","e","currentTarget","onKeyPress","key","autoFocus","ProfileData","profile","status","updateStatus","profileData","src","photos","small","defaultUserPhoto","alt","fullName","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","Preloader","ProfileContacts","netWork","Object","keys","netWorkLinks","values","map","wrapperContacts","Post","s","item","message","likesCount","maxLength10","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeHolder","validate","MyPosts","postsElements","posts","post","id","postsBlock","new_post","formData","addPost","pastText","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","toString","history","push","getUserProfile","getStatus","Component","connector","auth","isAuth","compose","withRouter"],"mappings":"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","file":"static/js/4.756a166e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__JGxNj\",\"error\":\"FormsControls_error__PAzfS\",\"formSummaryError\":\"FormsControls_formSummaryError__5MlPU\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport {WrappedFieldsProps} from 'redux-form';\r\n\r\nconst FormControl: React.FC<any> = (props) => {\r\n    const {meta, children} = props\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError && styles.error} `}>\r\n\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldsProps> = (props) => {\r\n    const {input} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...props}/>\r\n    </FormControl>\r\n};\r\nexport const Input: React.FC<WrappedFieldsProps> = (props) => {\r\n    const {input} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...props}/>\r\n    </FormControl>\r\n};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n\r\n    return 'Field is required'\r\n}\r\nexport const maxLength = (max: number) => (value: string) => {\r\n    if (value && value.length > max) return `Max length is ${max} symbols`\r\n\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__CiwxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3_er9\",\"wrapperContacts\":\"ProfileData_wrapperContacts__2yaPx\",\"contacts\":\"ProfileData_contacts__22veH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1qs7u\",\"posts\":\"MyPosts_posts__tbkbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2q3Eb\"};","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    title: string\r\n    onChange: (value: string) => void\r\n}\r\n\r\nconst EditableSpan: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [title, setTitle] = useState<string>('')\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle(props.title)\r\n    }\r\n    const DeactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.onChange(title)\r\n    }\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    const onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            setEditMode(false)\r\n            props.onChange(title)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && <div>\r\n                <span onDoubleClick={activateEditMode}>{props.title || 'Status is not defined'}</span>\r\n            </div>}\r\n            {editMode && <div>\r\n                <input\r\n                    type={'text'}\r\n                    value={title}\r\n                    onBlur={DeactivateEditMode}\r\n                    onChange={onChange}\r\n                    onKeyPress={onEnter}\r\n                    autoFocus\r\n                />\r\n            </div>}\r\n        </div>\r\n    );\r\n\r\n})\r\n\r\nexport default EditableSpan;","import React from 'react';\r\nimport styles from './ProfileData.module.css'\r\nimport {ProfileType} from '../../../redux/profile-reducer';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport defaultUserPhoto from '../../../assets/images/userPhoto.png'\r\nimport EditableSpan from '../../common/EditableSpan/EditableSpan';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\nconst ProfileData = (props: PropsType) => {\r\n    const {\r\n        profile,\r\n        status,\r\n        updateStatus,\r\n    } = props\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={styles.profileData}>\r\n            <img src={profile.photos.small ? profile.photos.small : defaultUserPhoto} alt=\"profile avatar\"/>\r\n            <div>\r\n                <h3>{profile.fullName}</h3>\r\n            </div>\r\n\r\n            <EditableSpan title={status} onChange={updateStatus}/>\r\n\r\n            {profile.aboutMe && <div>\r\n                <h3>About me:</h3>\r\n                <span>{profile.aboutMe}</span>\r\n            </div>}\r\n            <div>\r\n                <h3>My contacts:</h3>\r\n                <ProfileContacts contacts={profile.contacts}/>\r\n            </div>\r\n            {profile.lookingForAJob && <div>\r\n                <h3>Ищу работу</h3>\r\n                {profile.lookingForAJobDescription}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;\r\n\r\ntype ProfileContactsType = {\r\n    contacts: {\r\n        'facebook': string | null\r\n        'website': string | null\r\n        'vk': string | null\r\n        'twitter': string | null\r\n        'instagram': string | null\r\n        'youtube': string | null\r\n        'github': string | null\r\n        'mainLink': string | null\r\n    }\r\n}\r\n\r\nconst ProfileContacts = (props: ProfileContactsType) => {\r\n\r\n    const netWork = Object.keys(props.contacts)\r\n    const netWorkLinks = Object.values(props.contacts)\r\n\r\n    netWork.map(key => (<div key={key}>{key}</div>))\r\n\r\n    return (\r\n        <div className={styles.wrapperContacts}>\r\n\r\n            <div className={styles.contacts}>{netWork.map(key => {\r\n                return (\r\n                    <div>\r\n                        {key}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n\r\n            <div className={styles.contacts}>{netWorkLinks.map(value => {\r\n                return (\r\n                    <div key={value}>\r\n                        {value ? value : 'Не заполнено'}\r\n                    </div>\r\n                )\r\n            })\r\n            }</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostType} from '../../../../redux/profile-reducer';\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://d13ezvd6yrslxm.cloudfront.net/wp/wp-content/images/avatar-2-story.jpg\"\r\n                 alt=\"Logo with Profile\"/>\r\n            <p>{props.message}</p>\r\n            <p>Like {props.likesCount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLength, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nexport type NewPostFormDataType = {\r\n    pastText: string\r\n}\r\ntype Props = {}\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<NewPostFormDataType, Props>> = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'pastText'}\r\n                    placeHolder={'Enter new post'}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst NewPostReduxForm = reduxForm<NewPostFormDataType>({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default NewPostReduxForm;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {MyPostsPropsType} from './MyPostsContainer';\r\nimport AddNewPostForm, {NewPostFormDataType} from './AddNewPostForm';\r\n\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    const postsElements = props.posts.map(post =>\r\n        <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            message={post.message}\r\n            likesCount={post.likesCount}/>)\r\n\r\n    const onAddPost = (formData: NewPostFormDataType) => {\r\n        props.addPost(formData.pastText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <div className={s.new_post}>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import {addPostActionCreator, PostType} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/store';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost(newPostText: string) {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport {MyPostsContainer} from './Posts/MyPostsContainer';\r\nimport {ProfilePropsType} from './ProfileContainer';\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            {/*<ProfileLogo />*/}\r\n            <ProfileData\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {getStatus, getUserProfile, ProfileType, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n// Component own properties\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId ? this.props.authorizedUserId.toString() : ''\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n        />\r\n    }\r\n}\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    auth: boolean\r\n}\r\nexport type ProfilePropsType = ConnectedProps<typeof connector>;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        auth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connector,\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}