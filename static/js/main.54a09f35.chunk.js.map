{"version":3,"sources":["API/api.ts","Components/Sidebar/Sidebar.module.css","redux/users-reducer.ts","reportWebVitals.ts","Components/Sidebar/Sidebar.tsx","Components/Sidebar/SidebarContainer.tsx","Components/common/Paginator/Paginator.tsx","Components/Users/User.tsx","Components/Users/Users.tsx","utils/object-helpers.ts","redux/app-reducer.ts","redux/reselectors/users-selectors.ts","Components/Users/UsersContainer.tsx","Components/Header/logo.svg","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","redux/sidebar-reducer.ts","redux/store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","Components/common/Preloader/Preloader.tsx","redux/auth-reducer.ts","Components/common/Paginator/Paginator.module.css","Components/Header/Header.module.css","redux/profile-reducer.ts","assets/images/userPhoto.png","redux/dialogs-reducer.ts","Components/Users/UsersContainer.module.css","Components/common/Preloader/Preloader.module.css"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","id","post","unfollow","delete","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","USERS_ACTIONS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SidebarFriendsBlock","props","friendItem","friends","map","friend","name","className","s","friendBlock","Friend","imgProfilePhoto","Sidebar","sidebar","to","activeClassName","active","SidebarContainer","connect","state","Paginator","totalItemsCount","portionSize","onPageChanged","React","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","onClick","filter","p","selectedPage","pageNumber","e","Users","users","followingInProgress","src","photos","small","userPhoto","alt","followed","disabled","some","totalCount","UsersEl","u","User","updateObjectInArray","items","itemId","objPropName","newObjProps","initialState","isFetching","followSuccess","userID","type","FOLLOW","unfollowSuccess","UNFOLLOW","toggleIsFetching","TOGGLE_IS_FETCHING","toggleFollowingProgress","isFollow","TOGGLE_IS_FOLLOWING_IN_PROGRESS","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","getAllowedUsers","createSelector","usersPage","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainerAPI","page","this","Preloader","Component","connector","SET_CURRENT_PAGE","SET_USERS","SET_TOTAL_USERS_COUNT","bind","Header","header","logo","loginBlock","isAuth","HeaderContainer","auth","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","action","authReducer","app","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","withSuspense","Suspense","fallback","LoginPage","lazy","ProfileContainer","DialogsContainer","App","initializeApp","path","render","UsersContainer","getAuthUserData","promise","Promise","all","INITIALIZED_SUCCESS","AppContainer","compose","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","ldsHourglass","error","SET_USER_DATA","SET_AUTH_ERROR","payload","setAuthUserData","Error","message","messages","length","stopSubmit","_error","PROFILE_ACTION_TYPE","posts","likesCount","profile","ADD_POST","newPost","Date","getTime","newPostText","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postId","addPostActionCreator","setStatus","getUserProfile","console","warn","SEND_MESSAGE","dialogs","newMessage","value","trimmedText","trim","sendMessageAC"],"mappings":"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","file":"static/js/main.54a09f35.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {ProfileType} from '../redux/profile-reducer';\r\n\r\nexport type ResponseItemType = {\r\n    'name': string\r\n    'id': number\r\n    'uniqueUrlName': null | string\r\n    'photos': {\r\n        'small': null | string\r\n        'large': null | string\r\n    },\r\n    'status': null | string\r\n    'followed': boolean\r\n}\r\nexport type ServerData<T = []> = {\r\n    'items': T\r\n    'totalCount': number\r\n    'error': null | string\r\n\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: T\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '5a0cdbca-9689-4621-a5f0-b22378b0e052'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number = 1, pageSize: number = 10) => {\r\n        return instance.get<ServerData<ResponseItemType[]>>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response ) => response.data)\r\n    },\r\n    follow: (id: number = 2) => {\r\n        return instance.post(`follow/${id}`)\r\n            .then((response) => response.data)\r\n    },\r\n    unfollow: (id: number = 2) => {\r\n        return instance.delete(`follow/${id}`)\r\n            .then((response) => response.data)\r\n    },\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId: string) => {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n    },\r\n    getStatus: (userId: string) => {\r\n        return instance.get<string>(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus: (status: string) => {\r\n        return instance.put(`/profile/status/`, {\r\n            status: status\r\n        })\r\n    }\r\n}\r\n\r\n\r\ntype AuthResponseType = {\r\n    data: {\r\n        id: number\r\n        login: string\r\n        email: string\r\n    }\r\n    'messages': string[]\r\n    'fieldsErrors': [],\r\n    'resultCode': number\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () => {\r\n        return instance.get<AuthResponseType>(`auth/me`)\r\n    },\r\n    login: (email: string, password: string, rememberMe: boolean = false,) => {\r\n        return instance.post<AuthResponseType>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        })\r\n    },\r\n    logout: () => {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__13B6p\",\"active\":\"Sidebar_active__2WsD6\",\"friendBlock\":\"Sidebar_friendBlock__2oXRU\",\"friend\":\"Sidebar_friend__3Y_SH\",\"name\":\"Sidebar_name__2Hl5y\",\"imgProfilePhoto\":\"Sidebar_imgProfilePhoto__1UA-e\"};","import {Dispatch} from 'redux';\r\nimport {ResponseType, usersAPI} from '../API/api';\r\nimport {AppThunkType} from './store';\r\nimport {updateObjectInArray} from '../utils/object-helpers';\r\n\r\nexport enum USERS_ACTIONS {\r\n    FOLLOW = 'FOLLOW',\r\n    UNFOLLOW = 'UNFOLLOW',\r\n    SET_USERS = 'SET_USERS',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS',\r\n}\r\n\r\n\r\nexport type UsersInitialStatePropsType = {\r\n    'name': string\r\n    'id': number\r\n    'uniqueUrlName': string | null\r\n    'photos': {\r\n        'small': string | null\r\n        'large': string | null\r\n    },\r\n    'status': string | null\r\n    'followed': boolean\r\n}\r\n\r\nexport type UsersInitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UsersInitialStatePropsType[],\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as number[]\r\n}\r\n\r\nexport const usersReducer = (state: UsersInitialStateType = initialState, action: UserReducerType): UsersInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case USERS_ACTIONS.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n        case USERS_ACTIONS.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n        case USERS_ACTIONS.SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case USERS_ACTIONS.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case USERS_ACTIONS.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case USERS_ACTIONS.TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case USERS_ACTIONS.TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollow\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport type UserReducerType = ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\n// Action Creators\r\nexport const followSuccess = (userID: number) => {\r\n    return {type: USERS_ACTIONS.FOLLOW, userID} as const\r\n}\r\nexport const unfollowSuccess = (userID: number) => {\r\n    return {type: USERS_ACTIONS.UNFOLLOW, userID} as const\r\n}\r\nexport const setUsers = (users: UsersInitialStatePropsType[]) => {\r\n    return {type: USERS_ACTIONS.SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: USERS_ACTIONS.SET_CURRENT_PAGE, currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: USERS_ACTIONS.SET_TOTAL_USERS_COUNT, totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: USERS_ACTIONS.TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFollow: boolean, userId: number) => {\r\n    return {type: USERS_ACTIONS.TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFollow, userId} as const\r\n}\r\n\r\nconst followUnfollowFlow = async (\r\n    dispatch: Dispatch,\r\n    userId: number,\r\n    apiMethod: (userId: number) => Promise<ResponseType>,\r\n    actionCreator: (userId: number) => UserReducerType\r\n) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n// Thunk Creator\r\nexport const getUsers = (page: number, pageSize: number): AppThunkType => async dispatch => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n}\r\nexport const follow = (userId: number): AppThunkType => async dispatch => {\r\n    const apiMethod = usersAPI.follow.bind(usersAPI)\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, followSuccess)\r\n}\r\nexport const unfollow = (userId: number): AppThunkType => async dispatch => {\r\n    const apiMethod = usersAPI.unfollow\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess)\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Sidebar.module.css';\nimport {FriendsType, SidebarType} from '../../redux/sidebar-reducer';\nimport {SidebarPropsType} from './SidebarContainer';\n\n\nconst Sidebar: React.FC<SidebarPropsType> = (props) => {\n    return (\n        <aside className={s.sidebar}>\n            <nav >\n                <ul>\n                    <li><NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink></li>\n                    <li><NavLink to={'/dialogs'} activeClassName={s.active}>Messages</NavLink></li>\n                    <li><NavLink to={'/users'} activeClassName={s.active}>Users</NavLink></li>\n                </ul>\n            </nav>\n            <SidebarFriendsBlock friends={props.sidebar.friends}/>\n        </aside>\n    )\n}\n\nconst SidebarFriendsBlock: React.FC<SidebarType> = (props) => {\n\n    const friendItem = props.friends.map(friend => <Friend key={friend.id} id={friend.id} name={friend.name}/>)\n\n    return (\n        <div>\n            <h3>Friends</h3>\n            <div className={s.friendBlock}>\n                {friendItem}\n            </div>\n        </div>\n    )\n}\n\nconst Friend: React.FC<FriendsType> = (props) => {\n    return (\n        <div className={s.friend}>\n            <div className={s.imgProfilePhoto}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Sidebar;\n","import Sidebar from './Sidebar';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {connect} from 'react-redux';\r\nimport { SidebarType } from '../../redux/sidebar-reducer';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    sidebar: SidebarType\r\n}\r\ntype MapDispatchToPropsType = {}\r\n\r\nexport type SidebarPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport const SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react';\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number,\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = (props) => {\r\n    const {\r\n        totalItemsCount,\r\n        pageSize,\r\n        currentPage,\r\n        portionSize = 10,\r\n        onPageChanged,\r\n    } = props\r\n\r\n    let [portionNumber, setPortionNumber] = React.useState(1);\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className={cn(styles.paginator)}>\r\n            { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={ cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport userPhoto from '../../assets/images/userPhoto.png'\r\nimport styles from './UsersContainer.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {ResponseItemType} from '../../API/api';\r\n\r\ntype PropsType = {\r\n    users: ResponseItemType\r\n    followingInProgress: number[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Users: React.FC<PropsType> = props => {\r\n    const {\r\n        users,\r\n        followingInProgress,\r\n        follow,\r\n        unfollow,\r\n    } = props\r\n\r\n    return <>\r\n\r\n        <div key={users.id}>\r\n            <div>\r\n                <NavLink to={`profile/${users.id}`}>\r\n                    <img\r\n                        src={users.photos.small !== null ? users.photos.small : userPhoto}\r\n                        className={styles.userPhoto} alt={'Avatar'}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {users.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === users.id)}\r\n                              onClick={() => {\r\n                                  unfollow(users.id)\r\n                              }}>Unfollow</button>\r\n\r\n                    : <button disabled={followingInProgress.some(id => id === users.id)}\r\n                              onClick={() => {\r\n                                  follow(users.id)\r\n                              }}>Follow</button>}\r\n            </div>\r\n            <div>\r\n                <div>{users.name}</div>\r\n                <div>{users.status}</div>\r\n            </div>\r\n            <div>\r\n                <div>{'u.location.country'}</div>\r\n                <div>{'u.location.city'}</div>\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport {ResponseItemType} from '../../API/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\ntype PropsType = {\r\n    users: ResponseItemType[]\r\n    totalCount: number,\r\n    pageSize: number\r\n    currentPage: number\r\n    followingInProgress: number[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n    const {\r\n        currentPage,\r\n        onPageChanged,\r\n        totalCount,\r\n        pageSize,\r\n        users,\r\n        follow,\r\n        unfollow,\r\n        followingInProgress,\r\n    } = props\r\n\r\n    const UsersEl = users.map((u) => {\r\n        return (\r\n            <User users={u} followingInProgress={followingInProgress} follow={follow} unfollow={unfollow} onPageChanged={onPageChanged}/>\r\n        )\r\n    })\r\n\r\n    return <>\r\n\r\n        <div>\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                pageSize={pageSize}\r\n                totalItemsCount={totalCount}\r\n                currentPage={currentPage}\r\n            />\r\n            {UsersEl}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Users","export const updateObjectInArray = <T, P extends keyof T>(items: T[], itemId: T[P], objPropName: P, newObjProps: Partial<T>) => {\r\n    return items.map(u =>  u[objPropName] === itemId ? {...u, ...newObjProps} : u)\r\n}","import {AppThunkType} from './store';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\nexport enum USERS_ACTIONS {\r\n    INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n}\r\n\r\n\r\nconst initialState = {\r\n    initialized: false as boolean\r\n}\r\n\r\nexport const appReducer = (state: authInitialStatePropsType = initialState, action: appActionsType): authInitialStatePropsType => {\r\n\r\n    switch (action.type) {\r\n        case 'INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state, initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n// Action Creators\r\nexport const initializedSuccess = () => ({\r\n        type: USERS_ACTIONS.INITIALIZED_SUCCESS,\r\n    } as const\r\n)\r\n\r\n// Thunk Creators\r\nexport const initializeApp = (): AppThunkType => async dispatch => {\r\n    const promise = await dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n// Types\r\nexport type authInitialStatePropsType = typeof initialState\r\nexport type initializedSuccessType = ReturnType<typeof initializedSuccess>\r\n\r\nexport type appActionsType =\r\n    | initializedSuccessType\r\n","import {createSelector} from 'reselect';\r\nimport {AppStateType} from '../store';\r\n\r\nconst getAllowedUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getAllowedUsers = createSelector(\r\n    getAllowedUsersSelector,\r\n    (users) => users.filter(u => true)\r\n)\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalCount = (state: AppStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {follow, getUsers, unfollow, UsersInitialStatePropsType} from '../../redux/users-reducer';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {\r\n    getAllowedUsers,\r\n\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalCount\r\n} from '../../redux/reselectors/users-selectors';\r\n\r\n\r\nexport class UsersContainerAPI extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (page: number) => {\r\n        const {getUsers, pageSize} = this.props\r\n        getUsers(page, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching && <Preloader/>}\r\n            <Users users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   pageSize={this.props.pageSize}\r\n                   totalCount={this.props.totalCount}\r\n                   onPageChanged={this.onPageChanged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersInitialStatePropsType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getAllowedUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    getUsers,\r\n    follow,\r\n    unfollow\r\n})\r\n\r\nexport type UsersPropsType = ConnectedProps<typeof connector>\r\n\r\nexport default connector(UsersContainerAPI)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport s from './Header.module.css';\nimport { NavLink } from 'react-router-dom';\nimport {HeaderPropsType} from './HeaderContainer';\n\nexport const Header = (props: HeaderPropsType) => {\n  return (\n    <header className={s.header}>\n        <img src={logo} alt=\"\"/>\n\n        <div className={s.loginBlock}>\n            {props.isAuth\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                : <NavLink to={'/Login'}>Login</NavLink> }\n\n        </div>\n    </header>\n  );\n}\n","import React from 'react';\nimport {Header} from './Header';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {logout} from '../../redux/auth-reducer';\nimport {AppStateType} from '../../redux/store';\n\nexport class HeaderContainer extends React.Component<HeaderPropsType> {\n\n    render() {\n        return (<Header {...this.props}/>);\n    }\n}\n\ntype MapStateToProps = {\n    isAuth: boolean\n    login: string | null\n}\nconst mapStateToProps = (state: AppStateType): MapStateToProps => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\n\nconst connector = connect(mapStateToProps, {\n    logout,\n})\nexport default connector(HeaderContainer);\n\n// Types\nexport type HeaderPropsType = ConnectedProps<typeof connector>;\n","export type FriendsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type SidebarType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\n\r\nconst initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Dimych',},\r\n        {id: 2, name: 'Nasty',},\r\n        {id: 3, name: 'Vova',},\r\n    ] as FriendsType[]\r\n}\r\n\r\nexport type SidebarReducerInitialStateType = typeof initialState\r\n\r\nexport const sidebarReducer = (state: SidebarReducerInitialStateType = initialState, action: sidebarActionsType): SidebarReducerInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type sidebarActionsType = ReturnType<typeof sidebar>\r\n\r\nexport const sidebar = () => {\r\n    return {type: 'test'} as const\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {ProfileActionsType, profileReducer} from './profile-reducer';\r\nimport {dialogsActionsType, dialogsReducer} from './dialogs-reducer';\r\nimport {sidebarActionsType, sidebarReducer} from './sidebar-reducer';\r\nimport {UserReducerType, usersReducer} from './users-reducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {authActionsType, authReducer} from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appActionsType, appReducer} from './app-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType =\r\n    | authActionsType\r\n    | dialogsActionsType\r\n    | ProfileActionsType\r\n    | sidebarActionsType\r\n    | appActionsType\r\n    | UserReducerType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\nexport let store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from \"react\";\r\nimport {Preloader} from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component: React.FC | React.ComponentClass) => {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n};","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport {SidebarContainer} from \"./Components/Sidebar/SidebarContainer\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport {compose} from \"redux\";\r\nimport {connect, ConnectedProps, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {AppStateType, store} from \"./redux/store\";\r\nimport {Preloader} from \"./Components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst LoginPage = React.lazy(() => import('./Components/Login/LoginPage'))\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'))\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app_wrapper\">\r\n                <HeaderContainer/>\r\n                <SidebarContainer/>\r\n                <div className={'app_wrapper_content'}>\r\n                    <Route path=\"/login\" render={withSuspense(LoginPage)}/>\r\n                    <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n\r\n                    <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                    <Route path=\"/users/:userId?\" render={() => <UsersContainer/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToProps => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {initializeApp})\r\n\r\nexport const AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connector,\r\n)(App)\r\n\r\nconst SamuraiJSApp: React.FC = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp\r\n\r\n// Types\r\nexport type AppPropsType = ConnectedProps<typeof connector>;\r\ntype MapStateToProps = {\r\n    initialized: boolean\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport SamuraiJSApp from './App';\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react'\r\nimport styles from './Preloader.module.css'\r\n\r\n\r\n\r\nexport const Preloader = () => {\r\n    return <>\r\n            <div className={styles.ldsHourglass}/>\r\n    </>\r\n}","import {authAPI} from '../API/api';\r\nimport {AppThunkType} from './store';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nexport enum USERS_ACTIONS {\r\n    SET_USER_DATA = 'SET_USER_DATA',\r\n    SET_AUTH_ERROR = 'SET_AUTH_ERROR',\r\n}\r\n\r\n\r\nexport type authInitialStatePropsType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuth: boolean\r\n    error: string | null\r\n}\r\n\r\nconst initialState: authInitialStatePropsType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer = (state: authInitialStatePropsType = initialState, action: authActionsType): authInitialStatePropsType => {\r\n\r\n    switch (action.type) {\r\n        case USERS_ACTIONS.SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case USERS_ACTIONS.SET_AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n// Action Creators\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: USERS_ACTIONS.SET_USER_DATA,\r\n        payload: {\r\n            id,\r\n            login,\r\n            email,\r\n            isAuth,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setAuthError = (error: string | null) => {\r\n    return {\r\n        type: USERS_ACTIONS.SET_AUTH_ERROR,\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\n// Thunk Creators\r\n\r\nexport const getAuthUserData = (): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await authAPI.me()\r\n        if (!response.data.resultCode) {\r\n            const {id, login, email} = response.data.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n        }\r\n    } catch (e) {\r\n        throw new Error()\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await authAPI.login(email, password, rememberMe)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            return dispatch(getAuthUserData())\r\n        } else {// return dispatch(setAuthError(response.data.messages[0]))\r\n            const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            return dispatch(stopSubmit('Login', {_error: message}))\r\n        }\r\n\r\n    } catch (e) {\r\n        throw new Error()\r\n    }\r\n}\r\nexport const logout = (): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await authAPI.logout()\r\n\r\n        if (!response.data.resultCode) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n\r\n    } catch (e) {\r\n        throw new Error()\r\n    }\r\n}\r\n\r\n// Types\r\nexport type authActionsType =\r\n    | ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof setAuthError>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__9UwNL\",\"pageNumber\":\"Paginator_pageNumber__2Hsit\",\"selectedPage\":\"Paginator_selectedPage__ddVHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2x0-v\",\"loginBlock\":\"Header_loginBlock__1i9Ib\"};","import {profileAPI} from '../API/api';\r\nimport {AppThunkType} from './store';\r\n\r\nexport enum PROFILE_ACTION_TYPE {\r\n    ADD_POST = 'APP/PROFILE/ADD-POST',\r\n    SET_USER_PROFILE = 'APP/PROFILE/SET_PROFILE_INFO-NEW-POST-TEXT',\r\n    SET_STATUS = 'APP/PROFILE/SET_STATUS',\r\n    DELETE_POST = 'APP/PROFILE/DELETE_POST',\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: string | null\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    userId: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            message: 'Good this site',\r\n            likesCount: 10\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Good this site',\r\n            likesCount: 10\r\n        }\r\n    ] as PostType[],\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\nexport type ProfileReducerInitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: ProfileReducerInitialStateType = initialState, action: ProfileActionsType): ProfileReducerInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPE.ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n\r\n        case PROFILE_ACTION_TYPE.SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case PROFILE_ACTION_TYPE.SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case PROFILE_ACTION_TYPE.DELETE_POST:\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    | ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>\r\n\r\n// Action Creators\r\nexport const addPostActionCreator = (newPostText: string) => {\r\n    return {type: PROFILE_ACTION_TYPE.ADD_POST, newPostText} as const\r\n}\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {type: PROFILE_ACTION_TYPE.SET_USER_PROFILE, profile} as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {type: PROFILE_ACTION_TYPE.SET_STATUS, status} as const\r\n}\r\nexport const deletePost = (postId: number) => {\r\n    return {type: PROFILE_ACTION_TYPE.DELETE_POST, postId} as const\r\n}\r\n\r\n// Thunk Creator\r\nexport const getUserProfile = (userId: string): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    } catch (e) {\r\n        console.warn(e)\r\n    }\r\n}\r\nexport const getStatus = (userId: string): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    } catch (e) {\r\n        console.warn(e)\r\n    }\r\n}\r\nexport const updateStatus = (status: string): AppThunkType => async dispatch => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    } catch (e) {\r\n        throw new Error(e)\r\n    }\r\n}\r\n\r\n\r\n// const handlers = {\r\n//     [LOADING]: (state) => {\r\n//         return {...state, isLoading: true}\r\n//     },\r\n//     DEFAULT: (state) => state,\r\n// }\r\n//\r\n// export const userReducer = (state, action) => {\r\n//     const handler = handlers[action.type] || handlers.DEFAULT\r\n//     return handler(state, action)\r\n// }","export default __webpack_public_path__ + \"static/media/userPhoto.b89021c6.png\";","export const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych',},\r\n        {id: 2, name: 'Nasty',},\r\n        {id: 3, name: 'Vova',},\r\n        {id: 4, name: 'Viktor',},\r\n        {id: 5, name: 'Olya',},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Dimych'},\r\n    ] as MessageType[]\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\n/*export type AddMessageActionType = ReturnType<typeof sendMessageAC>\r\nexport type UpdateNewDialogMessageActionType = ReturnType<typeof updateNewMessageBodyAC>*/\r\nexport const dialogsReducer = (state: DialogsInitialStateType = initialState, action: dialogsActionsType): DialogsInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.value,\r\n            }\r\n            const trimmedText = action.value.trim()\r\n            if (trimmedText) {\r\n                return {\r\n                    ...state,\r\n                    messages: [...state.messages, newMessage],\r\n                }\r\n            }\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type dialogsActionsType = ReturnType<typeof sendMessageAC>\r\n\r\nexport const sendMessageAC = (value: string) => {\r\n    return {type: SEND_MESSAGE, value} as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"UsersContainer_userPhoto__1HjXU\",\"selectedPage\":\"UsersContainer_selectedPage__2syrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__3XCPk\",\"ldsHourglass\":\"Preloader_ldsHourglass__pzUo-\",\"lds-hourglass\":\"Preloader_lds-hourglass__1hkv0\"};"],"sourceRoot":""}